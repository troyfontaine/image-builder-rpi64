
version: 2
jobs:
  shellcheck:
    docker:
      - image: nlknguyen/alpine-shellcheck:v0.4.6
    steps:
      - checkout
      - run:
          name: Check Scripts
          command: |
            find . -type f -name '*.sh' | wc -l
            find . -type f -name '*.sh' | xargs shellcheck --external-sources
  checkout_code:
    docker:
      - image: circleci/buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: "Set environment variables"
          command: |
            BUILD_NR="$(date '+%Y%m%d-%H%M%S')"
            echo "export BUILD_NR=$BUILD_NR" >> env
            GHR_VERSION="0.10.2"
            echo "export GHR_VERSION=$GHR_VERSION" >> env
            BUILD_DEST="builds/$BUILD_NR"
            echo "export BUILD_DEST=$BUILD_DEST" >> env
      - save_cache:
          key: project-{{ .Branch }}-{{ .Revision }}
          paths:
            - env
            - builder
            - .dockerignore
            - Dockerfile
            - Makefile
  build-and-test:
    machine:
      image: circleci/classic:201708-01
    steps:
#      - setup_remote_docker:
#          docker_layer_caching: true
#      - restore_cache:
#          keys:
#            - project-{{ .Branch }}-{{ .Revision }}
      - checkout
      - run:
          name: "Set environment variables"
          command: |
            BUILD_NR="$(date '+%Y%m%d-%H%M%S')"
            echo "export BUILD_NR=$BUILD_NR" >> env
            GHR_VERSION="0.10.2"
            echo "export GHR_VERSION=$GHR_VERSION" >> env
      - run:
          name: "Load environment variables"
          command: echo "$(cat env)" >> $BASH_ENV
      - run:
          name: "Create Build Directory"
          command: mkdir -p "builds/$BUILD_NR"
      - run:
          name: "Build Image"
          command: |
            sudo bash -c "VERSION=v$BUILD_NR make sd-image"
      - run:
          name: "Test Image"
          command: |
            sudo bash -c "VERSION=v$BUILD_NR make test"
  publish:
    docker:
      - image: circleci/ruby:2.2
    steps:
      - run:
          name: "Placeholder"
          command: echo "DOOM"

workflows:
  version: 2
  commit-workflow:
    jobs:
#      - shellcheck
#      - checkout_code
      - build-and-test
#          requires:
#            - checkout_code
#      - publish:
#          requires:
#            - checkout_code
#            - build-and-test
#          filters:
#            branches:
#              only: master
#  scheduled-workflow:
#    triggers:
#      - schedule:
#          cron: "0 1 * * *"
#          filters:
#            branches:
#              only: master
#    jobs:
#      - checkout_code
#      - build-and-test:
#          requires:
#            - checkout_code
#      - publish:
#          requires:
#            - checkout_code
#            - build-and-test